{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","React","memo","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","method","action","onSubmit","event","preventDefault","type","name","id","placeholder","value","onChange","e","target","App","moviesFromServer","addMovies","currentMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0732f03e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './NewMovie.scss';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const NewMovie: React.FC<Props> = React.memo(({\n  onAdd,\n}) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const createMovie = () => {\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handlerChange = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    createMovie();\n    resetForm();\n  };\n\n  return (\n    <div className=\"form\">\n      <h1 className=\"title\">\n        Add the Movie\n      </h1>\n      <form\n        method=\"post\"\n        action=\"#\"\n        onSubmit={handlerChange}\n        className=\"form_main\"\n      >\n        <input\n          type=\"text\"\n          name=\"title\"\n          id=\"title\"\n          placeholder=\"Write the title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          className=\"form_text\"\n        />\n        <textarea\n          name=\"description\"\n          id=\"description\"\n          placeholder=\"Write the description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className=\"form_description\"\n        />\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          id=\"imgUrl\"\n          placeholder=\"Write the imgUrl\"\n          value={imgUrl}\n          onChange={(e) => (\n            setImgUrl(e.target.value)\n          )}\n          className=\"form_text\"\n        />\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          id=\"imdbUrl\"\n          placeholder=\"Write the imdbUrl\"\n          value={imdbUrl}\n          onChange={(e) => setImdbUrl(e.target.value)}\n          className=\"form_text\"\n        />\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          id=\"imdbId\"\n          placeholder=\"Write the imdbId\"\n          value={imdbId}\n          onChange={(e) => setImdbId(e.target.value)}\n          className=\"form_text\"\n        />\n        <button className=\"button_add\" type=\"submit\">\n          Add the Form\n        </button>\n      </form>\n    </div>\n  );\n});\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = React.memo(() => {\n  const [movies, addMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    addMovies(currentMovie => [\n      ...currentMovie,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}